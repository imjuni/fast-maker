<%
  function getRouteOption(routeOption) {
    switch (routeOption.optionKind) {
      case 'variable':
        return `...option_${routeOption.hash},`
      case 'sync-function':
        return `...option_${routeOption.hash}(fastify),`
      case 'async-function':
        return `...(await option_${routeOption.hash}(fastify)),`
      case 'sync-arrow':
        return `...option_${routeOption.hash}(fastify),`
      case 'async-arrow':
        return `...(await option_${routeOption.hash}(fastify)),`
      default:
        return '';
    }
  }
%>
export default function routing(fastify: FastifyInstance): void {
  <% it.routes.forEach((route) => { %>
  <% if (route.typeArgument != null && route.typeArgument.text !== '' ) { %>
  fastify.route<<%= route.typeArgument.text %>>({
    <% if (route.optionKind != null) { %>
  <%= getRouteOption(route) %>
    method: <%= JSON.stringify(route.methods) %>,
    url: '<%= route.routePath %>',
    handler: <%= route.handlerName %>,
    <% } else { %>
  method: <%= JSON.stringify(route.methods) %>,
    url: '<%= route.routePath %>',
    handler: <%= route.handlerName %>,
    <% } %>
  });
  <% } else { %>
  fastify.route({
    <% if (route.optionKind != null) { %>
  <%= getRouteOption(route) %>
    method: <%= JSON.stringify(route.methods) %>,
    url: '<%= route.routePath %>',
    handler: <%= route.handlerName %>,
    <% } else { %>
  method: <%= JSON.stringify(route.methods) %>,
    url: '<%= route.routePath %>',
    handler: <%= route.handlerName %>,
    <% } %>
  });
  <% } %>

  <% }) %>
}
